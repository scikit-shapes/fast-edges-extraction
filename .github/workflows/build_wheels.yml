# https://github.com/deepcharles/ruptures/blob/master/.github/workflows/upload-to-pypi.yml
name: Upload package to Pypi

on:
  release:
  workflow_dispatch:
  pull_request:

env:
  CIBW_BUILD_VERBOSITY: 3
  SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.event.inputs.overrideVersion }}
  # Run the package tests using `pytest`
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: pytest {project}/tests

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install deps
      run: python -m pip install build twine
    - name: Build SDist
      run: python -m build --sdist
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist-${{ github.job }}
        path: dist/*.tar.gz
    - name: Check metadata
      run: twine check dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # macos-13: x86_64
        # macos-latest: arm64 -> both are needed for cover all platforms
        os: [ubuntu-latest, macos-latest, windows-latest, macos-13]
    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Disable explicitly building PyPI wheels for specific configurations
          CIBW_SKIP: pp* cp{38,39,310,311,312,313}-manylinux_i686 *-musllinux_* cp{38,39,310,311,312,313}-win32
          CIBW_PRERELEASE_PYTHONS: False
          # Manually force a version (and avoid building local wheels)
          CIBW_ENVIRONMENT: "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheel-${{ github.job }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build_aarch64_wheels:
    name: Build wheels manylinux_aarch64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: [39, 310, 311, 312]
        include:
          - os: ubuntu-latest
            arch: aarch64
            platform_id: manylinux_aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          # Manually force a version (and avoid building local wheels)
          CIBW_ENVIRONMENT: "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-aarch64-wheel-${{ github.job }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  upload_all:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs: [build_wheels, build_aarch64_wheels, make_sdist]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/fast-edges-extraction
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
