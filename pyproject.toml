[project]
name = "fast_edges_extraction"
description = "Edge extraction for triangle meshes"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">= 3.9"
version = "0.1.3"
authors = [
    { name = "Louis Pujol" }
]
dependencies = [
    "numpy",
]

[project.urls]
repository = "https://github.com/Louis-Pujol/fast-edges-extraction"
changelog = "https://github.com/Louis-Pujol/fast-edges-extraction/blob/main/CHANGELOG.md"


[build-system]
requires = ["numpy>=2.0", "cython", "setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["fast_edges_extraction"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
    ]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = [
  "tests",
]

[tool.repo-review]
ignore = [
    "PC140", # MyPy
    "PY004", #Â Has docs folder
    "PY007", # Supports an easy task runner (nox or tox)
    "PC170", # PyGrep (because no rst files)
    "PC180", # Prettier
    "PC901", # pre-commit CI, TODO remove when the repo is public (https://learn.scientific-python.org/development/guides/style/#PC901)
    "MY", # MyPy
    "RTD" # ReadTheDocs
    ]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
    "PLR2004", # Magic value in comparison
]

[tool.ruff.lint.per-file-ignores]
"**examples/**" = ["T201"] # print statement
"**tests/**" = ["T201"] # print statement
